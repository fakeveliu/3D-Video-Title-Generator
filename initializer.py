import numpy, math

class Character(object):
    def __init__(self, name, corners):
        self.name = name
        self.corners = corners

class Button(object):
    def __init__(self, name, x0, y0, x1, y1):
        self.name = name
        self.x0, self.y0, self.x1, self.y1 = x0, y0, x1, y1
        self.color = 'white'

class Particle(object):
    def __init__(self, cx, cy, vx, vy, birth, color):
        self.cx, self.cy = cx, cy
        self.vx, self.vy = vx, vy
        self.birth = birth
        self.color = color
        self.alpha = 1

    def __repr__(self):
        return f'{self.cx}, {self.cy}'

def initCharacters(app):
    # 2D shape of all characters; corners listed in order of drawing
    # All characters have width=5 height=6, so the universal center is (2.5, 3)
    A = Character('A',
                  [(0,0),(0,5),(1,5),(1,6),(4,6),(4,5),(1,5),(1,4),(4,4),
                   (4,5),(5,5),(5,0),(4,0),(4,3),(1,3),(1,0)]
    )
    B = Character('B',
                  [(0,0),(0,6),(4,6),(4,5),(1,5),(1,4),(4,4),(4,5),(5,5),
                   (5,4),(4,4),(4,3),(1,3),(1,1),(4,1),(4,3),(5,3),(5,1),
                   (4,1),(4,0)]
    )
    C = Character('C',
                  [(0,1),(0,5),(1,5),(1,6),(4,6),(4,5),(5,5),(5,4),(4,4),
                   (4,5),(1,5),(1,1),(4,1),(4,2),(5,2),(5,1),(4,1),(4,0),
                   (1,0),(1,1)]
    )
    D = Character('D',
                  [(0,0),(0,6),(4,6),(4,5),(1,5),(1,1),(4,1),(4,5),(5,5),
                   (5,1),(4,1),(4,0)]
    )
    E = Character('E',
                  [(0,0),(0,6),(5,6),(5,5),(1,5),(1,4),(4,4),(4,3),(1,3),
                   (1,1),(5,1),(5,0)]
    )
    F = Character('F',
                  [(0,0),(0,6),(5,6),(5,5),(1,5),(1,4),(4,4),(4,3),(1,3),
                   (1,0)]
    )
    G = Character('G',
                  [(0,1),(0,5),(1,5),(1,6),(5,6),(5,5),(1,5),(1,1),(4,1),
                   (4,3),(3,3),(3,4),(5,4),(5,0),(1,0),(1,1)]
    )
    H = Character('H',
                  [(0,0),(0,6),(1,6),(1,4),(4,4),(4,6),(5,6),(5,0),(4,0),
                   (4,3),(1,3),(1,0)]
    )
    I = Character('I',
                  [(0,0),(0,1),(2,1),(2,5),(0,5),(0,6),(5,6),(5,5),(3,5),
                   (3,1),(5,1),(5,0)]
    )
    J = Character('J',
                  [(0,1),(0,2),(1,2),(1,1),(4,1),(4,6),(5,6),(5,1),(4,1),
                   (4,0),(1,0)]
    )
    K = Character('K',
                  [(0,0),(0,6),(1,6),(1,4),(3,4),(3,5),(4,5),(4,6),(5,6),
                   (5,5),(4,5),(4,4),(3,4),(3,3),(4,3),(4,2),(5,2),(5,0),
                   (4,0),(4,2),(3,2),(3,3),(1,3),(1,0)]
    )
    L = Character('L', 
                  [(0,0),(5,0),(5,1),(1,1),(1,6),(0,6)] 
    )
    M = Character('M',
                  [(0,0),(0,6),(1,6),(1,5),(2,5),(2,4),(3,4),(3,5),(4,5),
                   (4,6),(5,6),(5,0),(4,0),(4,4),(3,4),(3,3),(2,3),(2,4),
                   (1,4),(1,0)]
    )
    N = Character('N',
                  [(0,0),(0,6),(1,6),(1,5),(2,5),(2,4),(3,4),(3,3),(4,3),
                   (4,6),(5,6),(5,0),(4,0),(4,2),(3,2),(3,3),(2,3),(2,4),
                   (1,4),(1,0)]
    )
    O = Character('O',
                  [(0,1),(0,5),(1,5),(1,6),(4,6),(4,5),(1,5),(1,1),(4,1),
                   (4,5),(5,5),(5,1),(4,1),(4,0),(1,0),(1,1)]
    )
    P = Character('P',
                  [(0,0),(0,6),(4,6),(4,5),(1,5),(1,4),(4,4),(4,5),(5,5),
                   (5,4),(4,4),(4,3),(1,3),(1,0)]
    )
    Q = Character('Q',
                  [(0,1),(0,5),(1,5),(1,6),(4,6),(4,5),(5,5),(5,2),(4,2),
                   (4,5),(1,5),(1,1),(3,1),(3,2),(4,2),(4,1),(5,1),(5,0),
                   (4,0),(4,1),(3,1),(3,0),(1,0),(1,1)]
    )
    R = Character('R',
                  [(0,0),(0,6),(4,6),(4,5),(1,5),(1,4),(4,4),(4,5),(5,5),
                   (5,4),(4,4),(4,3),(5,3),(5,0),(4,0),(4,3),(1,3),(1,0)]
    )
    S = Character('S',
                  [(0,1),(0,2),(1,2),(1,1),(4,1),(4,3),(1,3),(1,4),(0,4),
                   (0,5),(1,5),(1,6),(5,6),(5,5),(1,5),(1,4),(4,4),(4,3),
                   (5,3),(5,1),(4,1),(4,0),(1,0),(1,1)]
    )
    T = Character('T',
                  [(2,0),(2,5),(0,5),(0,6),(5,6),(5,5),(3,5),(3,0)]
    )
    U = Character('U',
                  [(0,1),(0,6),(1,6),(1,1),(4,1),(4,6),(5,6),(5,1),(4,1),
                   (4,0),(1,0),(1,1)]
    )
    V = Character('V',
                  [(2,0),(2,1),(1,1),(1,3),(0,3),(0,6),(1,6),(1,3),(2,3),
                   (2,1),(3,1),(3,3),(4,3),(4,6),(5,6),(5,3),(4,3),(4,1),
                   (3,1),(3,0)]
    )
    W = Character('W',
                  [(0,0),(0,6),(1,6),(1,2),(2,2),(2,3),(3,3),(3,2),(4,2),
                   (4,6),(5,6),(5,0),(4,0),(4,1),(3,1),(3,2),(2,2),(2,1),
                   (1,1),(1,0)]
    )
    X = Character('X',
                  [(0,0),(0,2),(1,2),(1,3),(2,3),(2,4),(1,4),(1,5),(0,5),
                   (0,6),(1,6),(1,5),(2,5),(2,4),(3,4),(3,5),(4,5),(4,6),
                   (5,6),(5,5),(4,5),(4,4),(3,4),(3,3),(4,3),(4,2),(5,2),
                   (5,0),(4,0),(4,2),(3,2),(3,3),(2,3),(2,2),(1,2),(1,0)]
    )
    Y = Character('Y',
                  [(2,0),(2,4),(1,4),(1,5),(0,5),(0,6),(1,6),(1,5),(2,5),
                   (2,4),(3,4),(3,5),(4,5),(4,6),(5,6),(5,5),(4,5),(4,4),
                   (3,4),(3,0)]
    )
    Z = Character('Z',
                  [(0,0),(0,1.5),(1,1.5),(1,2.5),(2,2.5),(2,3.5),(3,3.5),
                   (3,4.5),(4,4.5),(4,5),(0,5),(0,6),(5,6),(5,4.5),(4,4.5),
                   (4,3.5),(3,3.5),(3,2.5),(2,2.5),(2,1.5),(1,1.5),(1,1),
                   (5,1),(5,0)]
    )
    space = Character(' ', [(0,0),(5,0)])
    three = Character('3',
                      [(0,1),(0,2),(1,2),(1,1),(4,1),(4,2.5),(2,2.5),(2,3.5),
                       (4,3.5),(4,5),(1,5),(1,4),(0,4),(0,5),(1,5),(1,6),
                       (4,6),(4,5),(5,5),(5,3.5),(4,3.5),(4,2.5),(5,2.5),
                       (5,1),(4,1),(4,0),(1,0),(1,1)])
    app.characters = [A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, 
                      T, U, V, W, X, Y, Z, space, three]
    app.charCenter = (2.5, 3)

#################################################
# Copied from Week 4 Spicy Recitation
#################################################

def initCamera(app):
    app.location = [5.0, 5.0, 5.0]
    app.lookAt = [0.0, 0.0, 0.0]
    app.x0, app.y0, app.x1, app.y1 = -20, -20, 20, 20 # field of view
    app.maxFOV = app.minFOV = False

def makeProjection(app):
    forwardVector = numpy.array(app.location) - numpy.array(app.lookAt)
    forwardVector /= numpy.linalg.norm(forwardVector)
    rightVector = numpy.cross(forwardVector, numpy.array([0, 1, 0]))
    upVector = numpy.cross(forwardVector, rightVector)
    app.M = numpy.array([
        [  rightVector[0],   rightVector[1],   rightVector[2], 0],
        [     upVector[0],      upVector[1],      upVector[2], 0],
        [forwardVector[0], forwardVector[1], forwardVector[2], 0],
        [ app.location[0],  app.location[1],  app.location[2], 1]])

def project(app, point):
    projection = app.M @ numpy.array([point[0], point[1], point[2], 1])
    projection[0] = (projection[0] - app.x0) * app.width / (app.x1 - app.x0)
    projection[1] = (projection[1] - app.y0) * app.height / (app.y1 - app.y0)
    return [projection[0], projection[1]]